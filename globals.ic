/***************************************************************************
 *   Copyright (C) 2012 by Tobias Volk                                     *
 *   mail@tobiasvolk.de                                                    *
 *                                                                         *
 *   This program is free software: you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation, either version 3 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>. *
 ***************************************************************************/


// version information
#define PEERVPN_VERSION_MAJOR 0
#define PEERVPN_VERSION_MINOR 23


// compile time options & timing parameters
#define INITPEER_STORAGE 1024
#define POLLWAIT 1000


// config parser options
#define CONFPARSER_LINEBUF_SIZE 4096
#define CONFPARSER_NAMEBUF_SIZE 512


// structures
struct s_initconfig {
	char sourceip[CONFPARSER_NAMEBUF_SIZE+1];
	char sourceport[CONFPARSER_NAMEBUF_SIZE+1];
	char tapname[CONFPARSER_NAMEBUF_SIZE+1];
	char userstr[CONFPARSER_NAMEBUF_SIZE+1];
	char groupstr[CONFPARSER_NAMEBUF_SIZE+1];
	char chrootstr[CONFPARSER_NAMEBUF_SIZE+1];
	char networkname[CONFPARSER_NAMEBUF_SIZE+1];
	char ifconfig4[CONFPARSER_NAMEBUF_SIZE+1];
	char ifconfig6[CONFPARSER_NAMEBUF_SIZE+1];
	char upcmd[CONFPARSER_NAMEBUF_SIZE+1];
	char initpeers[CONFPARSER_NAMEBUF_SIZE+1];
	char engines[CONFPARSER_NAMEBUF_SIZE+1];
	char password[CONFPARSER_NAMEBUF_SIZE+1];
	int password_len;
	int enableindirect;
	int enablerelay;
	int enableeth;
	int enableipv4;
	int enableipv6;
	int enableprivdrop;
	int enableconsole;
};


// global variables
struct s_io_state iostate;
P2PSEC_CTX *g_p2psec;
int g_mainloop;
char g_initpeers[INITPEER_STORAGE+1];
struct s_map g_mactable;
int g_enableconsole;
int g_enableeth;
int g_enableengines;
